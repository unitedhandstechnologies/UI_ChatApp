{"version":3,"file":"static/js/users.ce52620c.chunk.js","mappings":"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","sources":["views/Admin/users.js"],"sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport { Row, Col, Label } from 'reactstrap';\nimport ListPageHeading from 'containers/pages/ListPageHeading';\nimport { CSVLink } from 'react-csv';\nimport Pagination from 'containers/pages/Pagination';\nimport ImagePreView from 'components/PerviewImage/ModalView';\nimport StatusUpdate from 'components/UpdateStatus';\nimport { users } from 'Apis/admin';\nimport { NotificationManager } from 'components/common/react-notifications';\nimport { Link } from 'react-router-dom';\nimport ReactLoading from 'components/Loading';\nimport DeleteData from 'components/DeleteData';\nimport { convertDate } from 'constants/defaultValues';\nconst additional = {\n\tcurrentPage: 1,\n\ttotalItemCount: 0,\n\ttotalPage: 1,\n\tsearch: '',\n\tpageSizes: [10, 20, 50, 100],\n};\nconst ageRange = [\n\t'1-10',\n\t'10-20',\n\t'20-30',\n\t'30-40',\n\t'40-50',\n\t'50-60',\n\t'60-100',\n];\nconst Users = React.memo((props) => {\n\tconst CsvRef = useRef(null);\n\tconst [pageInfo, setPageInfo] = useState(additional);\n\tconst [totalPosts, setTotalPost] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [selectedPageSize, setSelectedPageSize] = useState(10);\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [searchText, setSearchtext] = useState(undefined);\n\tconst [viewImage, setViewImage] = useState(false);\n\tconst [imagePath, setImagePath] = useState('');\n\tconst [filters, setFilters] = useState({\n\t\tgender: '',\n\t\tcountry: '',\n\t\tage: '',\n\t});\n\tconst [csvData, setCsvData] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tuseEffect(() => {\n\t\tusers(\n\t\t\tcurrentPage,\n\t\t\tselectedPageSize,\n\t\t\tsearchText,\n\t\t\tprops.match?.params?.status || '',\n\t\t\tfilters\n\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconst { data } = res;\n\t\t\t\tconst { result, pagination } = data.data;\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetTotalPost(result);\n\t\t\t\tadditional.totalItemCount = pagination.totalRecord;\n\t\t\t\tadditional.selectedPageSize = pagination.limit;\n\t\t\t\tadditional.totalPage = pagination.totalPage;\n\t\t\t\tsetPageInfo({ ...additional });\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tif (err.response) {\n\t\t\t\t\tconst { data } = err.response;\n\t\t\t\t\tNotificationManager.warning(\n\t\t\t\t\t\tdata.error_message,\n\t\t\t\t\t\t'Something went wrong',\n\t\t\t\t\t\t3000,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t''\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t}, [selectedPageSize, currentPage, searchText, filters]);\n\tconst onSearchKey = (event) => {\n\t\tsetSearchtext(event.target.value);\n\t};\n\tconst handleLocalData = ({ target: { name, value } }) => {\n\t\tsetFilters({ ...filters, [name]: value });\n\t};\n\tconst changePageSize = (value) => {\n\t\tsetIsLoading(true);\n\t\tsetSelectedPageSize(value);\n\t};\n\tconst onChangePage = (value) => {\n\t\tsetCurrentPage(value);\n\t};\n\tconst DeleteDataLocal = (key) => {\n\t\ttotalPosts.splice(key, 1);\n\t\tsetTotalPost([...totalPosts]);\n\t};\n\tconst updateLocal = (value, key) => {\n\t\ttotalPosts[key] = value;\n\t\tsetTotalPost([...totalPosts]);\n\t};\n\tconst userStatus = (\n\t\t{ status, cancelViolationEndTime, lastApiAccess },\n\t\tisText = false\n\t) => {\n\t\tlet isDanger = false;\n\t\tlet text = 'Pending Approval';\n\t\tlet date = Math.round(new Date().getTime() / 1000, 0);\n\t\tif (status === 1) {\n\t\t\ttext = 'Active';\n\t\t\tisDanger = false;\n\t\t}\n\t\tif (cancelViolationEndTime > date) {\n\t\t\ttext = 'Frozen';\n\t\t\tisDanger = true;\n\t\t}\n\t\tif (date - 60 * 60 * 24 * 7 > lastApiAccess || status === 0) {\n\t\t\ttext = 'Inactive';\n\t\t\tisDanger = true;\n\t\t}\n\t\tif (isText) return text;\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={`badge badge-pill ${\n\t\t\t\t\tisDanger ? 'badge-danger' : 'badge-success'\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{text}\n\t\t\t</span>\n\t\t);\n\t};\n\tconst handleClick = () => {\n\t\tsetLoading(true);\n\t\tusers(1, 1000, '', props.match?.params?.status || '', filters)\n\t\t\t.then((res) => {\n\t\t\t\tconst { data } = res;\n\t\t\t\tconst { result } = data.data;\n\t\t\t\tsetLoading(false);\n\t\t\t\tconst final = result.map((value) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'User Name': value.name,\n\t\t\t\t\t\t'User Email': value.email,\n\t\t\t\t\t\t'User Phone': value.phone,\n\t\t\t\t\t\t'User status': { 0: 'Inactive', 1: 'Active' }[value.status],\n\t\t\t\t\t\t'Profile Created': convertDate(value.created),\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetCsvData(final);\n\t\t\t\tCsvRef.current.link.click();\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetLoading(false);\n\t\t\t\tif (err.response) {\n\t\t\t\t\tconst { data } = err.response;\n\t\t\t\t\tNotificationManager.warning(\n\t\t\t\t\t\tdata.error_message,\n\t\t\t\t\t\t'Something went wrong',\n\t\t\t\t\t\t3000,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t''\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t};\n\tconst startIndex = (currentPage - 1) * selectedPageSize;\n\tconst endIndex = currentPage * selectedPageSize;\n\treturn isLoading ? (\n\t\t<div className='loading' />\n\t) : (\n\t\t<Fragment>\n\t\t\t<CSVLink\n\t\t\t\tdata={csvData}\n\t\t\t\tfilename={`users-record.csv`}\n\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\tref={CsvRef}\n\t\t\t>\n\t\t\t\tDownload\n\t\t\t</CSVLink>\n\n\t\t\t<ListPageHeading\n\t\t\t\tonClick={() => props.history.push('/add-user')}\n\t\t\t\taddShow\n\t\t\t\tAddname='+ Add New User'\n\t\t\t\tmatch={props.match}\n\t\t\t\theading='Users'\n\t\t\t\tchangePageSize={changePageSize}\n\t\t\t\tselectedPageSize={selectedPageSize}\n\t\t\t\ttotalItemCount={pageInfo.totalItemCount}\n\t\t\t\tstartIndex={startIndex}\n\t\t\t\tendIndex={endIndex}\n\t\t\t\tonSearchKey={onSearchKey}\n\t\t\t\torderOptions={pageInfo.orderOptions}\n\t\t\t\tpageSizes={pageInfo.pageSizes}\n\t\t\t/>\n\t\t\t<ReactLoading loading={loading} />\n\t\t\t<Row className='mb-4'>\n\t\t\t\t<Col md='3'>\n\t\t\t\t\t<Label>Age Range</Label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tonChange={handleLocalData}\n\t\t\t\t\t\tname='age'\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=''>--Select Age Range</option>\n\t\t\t\t\t\t{ageRange.map((value) => (\n\t\t\t\t\t\t\t<option key={value} value={value}>\n\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</Col>\n\t\t\t\t<Col md='3'></Col>\n\t\t\t\t<Col md='3'></Col>\n\t\t\t\t<Col md='3'>\n\t\t\t\t\t<button className='btn btn-info ml-5 mt-4' onClick={handleClick}>\n\t\t\t\t\t\t<i className='simple-icon-arrow-down-circle mr-2'></i>Download CSV\n\t\t\t\t\t</button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<table className='table table-striped animate__animated  animate__zoomIn animate__fadeInDown mb-5'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Profile</th>\n\t\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t\t<th>Phone</th>\n\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t<th>Created Date</th>\n\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{totalPosts.map((post, key) => (\n\t\t\t\t\t\t<tr key={key}>\n\t\t\t\t\t\t\t<td>{key + 1}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: '/user-details',\n\t\t\t\t\t\t\t\t\t\tstate: { post },\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='d-flex'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t{post.name}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetImagePath(post.profile);\n\t\t\t\t\t\t\t\t\t\tsetViewImage(true);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\talt={post.first_name}\n\t\t\t\t\t\t\t\t\tsrc={post.profile}\n\t\t\t\t\t\t\t\t\tclassName='list-thumbnail responsive border-0 card-img-left'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{post.email}</td>\n\t\t\t\t\t\t\t<td>{post.phone}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<StatusUpdate\n\t\t\t\t\t\t\t\t\tdata={post}\n\t\t\t\t\t\t\t\t\ttable='users'\n\t\t\t\t\t\t\t\t\tstatusMessage={{\n\t\t\t\t\t\t\t\t\t\t0: 'Inactive',\n\t\t\t\t\t\t\t\t\t\t1: 'Active',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tupdateKey='status'\n\t\t\t\t\t\t\t\t\tonUpdate={() => updateLocal(key)}\n\t\t\t\t\t\t\t\t\tisButton\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{convertDate(post.created)}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: '/user-details',\n\t\t\t\t\t\t\t\t\t\tstate: { post },\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='btn btn-primary btn-sm'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tView\n\t\t\t\t\t\t\t\t</Link>{' '}\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: '/edit-user',\n\t\t\t\t\t\t\t\t\t\tstate: { post },\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='btn btn-info btn-sm'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t</Link>{' '}\n\t\t\t\t\t\t\t\t<DeleteData\n\t\t\t\t\t\t\t\t\tclasses='btn-sm'\n\t\t\t\t\t\t\t\t\ttable='users'\n\t\t\t\t\t\t\t\t\tdata={post.id}\n\t\t\t\t\t\t\t\t\tondelete={() => DeleteDataLocal(key)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</DeleteData>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t\t{totalPosts.length === 0 && (\n\t\t\t\t\t\t<tr className='no-record-tr'>\n\t\t\t\t\t\t\t<td colSpan='8'>\n\t\t\t\t\t\t\t\t<h2 className='no-record'>No record Found</h2>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<ImagePreView\n\t\t\t\timagePath={imagePath}\n\t\t\t\tshowModel={viewImage}\n\t\t\t\tonClose={(value) => setViewImage(value)}\n\t\t\t/>\n\t\t\t<Pagination\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\ttotalPage={pageInfo.totalPage}\n\t\t\t\tonChangePage={(i) => onChangePage(i)}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n});\n\nexport default Users;\n"],"names":["additional","currentPage","totalItemCount","totalPage","search","pageSizes","ageRange","Users","React","props","CsvRef","useRef","useState","pageInfo","setPageInfo","totalPosts","setTotalPost","isLoading","setIsLoading","selectedPageSize","setSelectedPageSize","setCurrentPage","undefined","searchText","setSearchtext","viewImage","setViewImage","imagePath","setImagePath","gender","country","age","filters","setFilters","csvData","setCsvData","loading","setLoading","useEffect","users","match","params","status","then","res","data","result","pagination","totalRecord","limit","catch","err","response","NotificationManager","error_message","startIndex","endIndex","className","Fragment","CSVLink","filename","style","display","ref","onClick","history","push","addShow","Addname","heading","changePageSize","value","onSearchKey","event","target","orderOptions","md","onChange","name","map","final","email","phone","convertDate","created","current","link","click","post","key","to","pathname","state","profile","alt","first_name","src","table","statusMessage","updateKey","onUpdate","updateLocal","isButton","classes","id","ondelete","splice","DeleteDataLocal","length","colSpan","showModel","onClose","onChangePage","i"],"sourceRoot":""}